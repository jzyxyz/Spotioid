$spotify-green: #1db954;
$disabled-gray: grey;
$spotify-black: #191414; // The root svg element of the vector map.
.map-svg {
  svg {
    stroke: #132238;
    height: 500px;
    width: 100%;
    // All layers are just path elements.
    path {
      fill: #364e68;
      cursor: pointer;

      // When a layer is hovered.
      &:hover {
        fill: #98ccd3;
      }

      // When a layer is focused.
      &:focus {
        fill: #ebf0f6;
      }

      // When a layer is 'checked' (via 'aria-checked').
      &[aria-checked='true'] {
        fill: #8f1537;
      }
      &[available='true'] {
        fill: $spotify-green;
      }

      // &[has_top_chart='false'] {
      //   fill: lightsalmon;
      //   cursor: not-allowed;
      // }
      &[available='false'] {
        fill: $disabled-gray;
        cursor: not-allowed;
      }

      // When a layer is 'selected' (via 'aria-current').
      &[aria-current='true'] {
        fill: #a275e3;
      }

      &[candidate='true'] {
        fill: orange;
      }
    }
  }
}

.search-input {
  border-bottom: 2px salmon solid;
  height: 30px;
  font-size: 25px;
  padding: 10px;
}

.auto-compl {
  display: flex;
  flex-direction: column;
}

.auto-compl-item:first-of-type {
  color: salmon;
  transform: scaleY(1.2);
}

@mixin auto-compl-item {
  padding: 10px;
}

.auto-compl-available {
  @include auto-compl-item();
  background-color: $spotify-green;
}

.auto-compl-unavailable {
  @include auto-compl-item();
  background-color: $disabled-gray;
}
